#!/bin/sh

STAGED_GO_FILES=$(git diff --cached --name-only | grep ".go$")

if [[ "$STAGED_GO_FILES" = "" ]]; then
  exit 0
fi

GOLANGCI_LINT=$GOPATH/bin/golangci-lint
GOLINES=$GOPATH/bin/golines

# Check for golangci-lint
if [[ ! -x "$GOLANGCI_LINT" ]]; then
  printf "\t\033[41mPlease install golangci-lint (go install github.com/golangci/golangci-lint/cmd/golangci-lint)"
  exit 1
fi

# Check for golines
if [[ ! -x "$GOLINES" ]]; then
  printf "\t\033[41mPlease install golines (go install github.com/segmentio/golines@latest)"
  exit 1
fi

NORMAL=$(tput sgr0)
LIME_YELLOW=$(tput setaf 190)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)

for FILE in $STAGED_GO_FILES
do
  printf "${LIME_YELLOW}Running go fmt on $FILE...${NORMAL}\n"
  go fmt $FILE
  if [[ $? != 0 ]]; then
    printf "${RED}Linting failed! ${NORMAL}Please fix errors before committing.\n"
    exit 1
  else
    printf "${GREEN}Linting passed! ${NORMAL}Continuing to commit.\n"
  fi

  printf "${LIME_YELLOW}Running golines on $FILE...${NORMAL}\n"
  golines $FILE -m 120 -w
  if [[ $? != 0 ]]; then
    printf "${RED}Linting failed! ${NORMAL}Please fix errors before committing.\n"
    exit 1
  else
    printf "${GREEN}Linting passed! ${NORMAL}Continuing to commit.\n"
  fi
done

DIRS=$(dirname $STAGED_GO_FILES | sort -u)
for DIR in $DIRS
do
  printf "${LIME_YELLOW}Running golangci-lint on $DIR...${NORMAL}\n"
  golangci-lint run $DIR
  if [[ $? != 0 ]]; then
    printf "${RED}Linting failed! ${NORMAL}Please fix errors before committing.\n"
    exit 1
  else
    printf "${GREEN}Linting passed! ${NORMAL}Continuing to commit.\n"
  fi
done
